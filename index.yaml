id: github.com/cloud-native-toolkit/terraform-gitops-image-registry
name: gitops-image-registry
type: terraform
description: Module to populate a gitops repo with the configuration needed to access an image registry, using a config maps and secrets.
tags:
  - gitops
  - config
  - image registry
versions:
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: registry
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
            version: ">= 1.0.0"
      - id: argocd_bootstrap
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
            version: ">= 1.0.0"
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The name of the server
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: registry_server
        moduleRef:
          id: registry
          output: registry_server
        type: string
        description: The server/host of the image registry
      - name: registry_user
        moduleRef:
          id: registry
          output: registry_user
        type: string
        description: The username to access the image registry
      - name: registry_password
        moduleRef:
          id: registry
          output: registry_password
        type: string
        description: The password to access the image registry
      - name: registry_namespace
        moduleRef:
          id: registry
          output: registry_namespace
        type: string
        description: The namespace in the image registry
      - name: registry_url
        moduleRef:
          id: registry
          output: registry_url
        type: string
        description: The url to access the image registry in a browser
      - name: kubeseal_cert
        moduleRef:
          id: argocd_bootstrap
          output: sealed_secrets_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ""
        optional: true
      - name: image_url
        type: string
        description: The url of the image that will be added to console link. If not provided the image will be empty
        default: ""
        optional: true
      - name: display_name
        type: string
        description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
        default: ""
        optional: true
    version: v1.1.1
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: registry
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
            version: ">= 1.0.0"
      - id: argocd_bootstrap
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
            version: ">= 1.0.0"
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: server_name
        moduleRef:
          id: gitops
          output: server_name
        type: string
        description: The name of the server
        default: default
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: registry_server
        moduleRef:
          id: registry
          output: registry_server
        type: string
        description: The server/host of the image registry
      - name: registry_user
        moduleRef:
          id: registry
          output: registry_user
        type: string
        description: The username to access the image registry
      - name: registry_password
        moduleRef:
          id: registry
          output: registry_password
        type: string
        description: The password to access the image registry
      - name: registry_namespace
        moduleRef:
          id: registry
          output: registry_namespace
        type: string
        description: The namespace in the image registry
      - name: registry_url
        moduleRef:
          id: registry
          output: registry_url
        type: string
        description: The url to access the image registry in a browser
      - name: kubeseal_cert
        moduleRef:
          id: argocd_bootstrap
          output: sealed_secrets_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ""
        optional: true
      - name: image_url
        type: string
        description: The url of the image that will be added to console link. If not provided the image will be empty
        default: ""
        optional: true
      - name: display_name
        type: string
        description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
        default: ""
        optional: true
    version: v1.1.0
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
      - id: registry
        refs:
          - source: github.com/cloud-native-toolkit/terraform-ibm-container-registry.git
            version: ">= 1.0.0"
      - id: argocd_bootstrap
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-argocd-bootstrap.git
            version: ">= 1.0.0"
          - source: github.com/cloud-native-toolkit/terraform-vsi-argocd-bootstrap.git
            version: ">= 1.0.0"
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: registry_server
        moduleRef:
          id: registry
          output: registry_server
        type: string
        description: The server/host of the image registry
      - name: registry_user
        moduleRef:
          id: registry
          output: registry_user
        type: string
        description: The username to access the image registry
      - name: registry_password
        moduleRef:
          id: registry
          output: registry_password
        type: string
        description: The password to access the image registry
      - name: registry_namespace
        moduleRef:
          id: registry
          output: registry_namespace
        type: string
        description: The namespace in the image registry
      - name: registry_url
        moduleRef:
          id: registry
          output: registry_url
        type: string
        description: The url to access the image registry in a browser
      - name: kubeseal_cert
        moduleRef:
          id: argocd_bootstrap
          output: sealed_secrets_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ""
        optional: true
      - name: image_url
        type: string
        description: The url of the image that will be added to console link. If not provided the image will be empty
        default: ""
        optional: true
      - name: display_name
        type: string
        description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
        default: ""
        optional: true
    version: v1.0.1
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: cluster
        refs:
          - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
            version: ">= 1.7.0"
          - source: github.com/ibm-garage-cloud/terraform-ibm-ocp-vpc
            version: ">= 1.0.0"
          - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
            version: ">= 2.0.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: cluster_type
        moduleRef:
          id: cluster
          output: platform.type_code
      - name: cluster_ingress_hostname
        moduleRef:
          id: cluster
          output: platform.ingress
      - name: tls_secret_name
        moduleRef:
          id: cluster
          output: platform.tls_secret
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
      - name: registry_server
        type: string
        description: The server/host of the image registry
      - name: registry_user
        type: string
        description: The username to access the image registry
      - name: registry_password
        type: string
        description: The password to access the image registry
      - name: registry_namespace
        type: string
        description: The namespace in the image registry
      - name: registry_url
        type: string
        description: The url to access the image registry in a browser
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ""
        optional: true
      - name: image_url
        type: string
        description: The url of the image that will be added to console link. If not provided the image will be empty
        default: ""
        optional: true
      - name: display_name
        type: string
        description: The display name that will appear in the console link. If not provided the value will default to 'Image Registry'
        default: ""
        optional: true
    version: v1.0.0
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: ">= 1.1.0"
      - id: cluster
        refs:
          - source: github.com/ibm-garage-cloud/terraform-ibm-container-platform
            version: ">= 1.7.0"
          - source: github.com/ibm-garage-cloud/terraform-ibm-ocp-vpc
            version: ">= 1.0.0"
          - source: github.com/ibm-garage-cloud/terraform-k8s-ocp-cluster
            version: ">= 2.0.0"
      - id: namespace
        refs:
          - source: github.com/cloud-native-toolkit/terraform-gitops-namespace.git
            version: ">= 1.0.0"
    variables:
      - name: gitops_config
        moduleRef:
          id: gitops
          output: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
      - name: git_credentials
        moduleRef:
          id: gitops
          output: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
      - name: cluster_type
        moduleRef:
          id: cluster
          output: platform.type_code
        type: string
        description: The cluster type (openshift or ocp3 or ocp4 or kubernetes)
        default: ocp4
        optional: true
      - name: cluster_ingress_hostname
        moduleRef:
          id: cluster
          output: platform.ingress
        type: string
        description: Ingress hostname of the IKS cluster.
        default: ""
        optional: true
      - name: tls_secret_name
        moduleRef:
          id: cluster
          output: platform.tls_secret
        type: string
        description: The name of the secret containing the tls certificate values
        default: ""
        optional: true
      - name: namespace
        moduleRef:
          id: namespace
          output: name
        type: string
        description: The namespace where the application should be deployed
    version: v0.0.0
